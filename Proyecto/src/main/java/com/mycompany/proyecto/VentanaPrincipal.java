
package com.mycompany.proyecto;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import ucar.ma2.InvalidRangeException;

/**
 *
 * @author jooli
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    String ruta1, ruta2, ruta3;
    String fecha;
    int opcion;
    int contadorArchivos = 1;
    int contadorIRH = 0;
    String[] datos;
    String[] resultados;
    String nombre;
    File lugar;
    JLabel etiqueta;
    Generador llamada =new Generador();
    
    public VentanaPrincipal() {
        initComponents();
        this.cerrar();
        this.setLocationRelativeTo(null);
        panelArchivo1.setVisible(false);
        panelArchivo2.setVisible(false);
        panelArchivo3.setVisible(false);
        ventanaDatos.setVisible(false);
        ventanaDatos.setLocationRelativeTo(null);
        ventanaIndice.setVisible(false);
        ventanaIndice.setLocationRelativeTo(null);
        ventanaMapa.setVisible(false);
        ventanaMapa.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ventanaDatos = new javax.swing.JFrame();
        textFecha = new javax.swing.JTextField();
        seleccionar = new javax.swing.JButton();
        labelFecha = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDatos = new javax.swing.JTextArea();
        exportarLabel = new javax.swing.JLabel();
        botonCSV = new javax.swing.JButton();
        ventanaIndice = new javax.swing.JFrame();
        exportarLabel1 = new javax.swing.JLabel();
        botonCSVIH = new javax.swing.JButton();
        textFechaIH = new javax.swing.JTextField();
        seleccionarIH = new javax.swing.JButton();
        labelFecha1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaDatosIH = new javax.swing.JTextArea();
        botonNC = new javax.swing.JButton();
        ventanaMapa = new javax.swing.JFrame();
        exportarmapa = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        abrir = new javax.swing.JButton();
        indiceHidrico = new javax.swing.JButton();
        panelArchivo1 = new javax.swing.JPanel();
        nombreArchivo1 = new javax.swing.JTextField();
        verMapa1 = new javax.swing.JButton();
        verDatos1 = new javax.swing.JButton();
        panelArchivo2 = new javax.swing.JPanel();
        nombreArchivo2 = new javax.swing.JTextField();
        verMapa2 = new javax.swing.JButton();
        verDatos2 = new javax.swing.JButton();
        panelArchivo3 = new javax.swing.JPanel();
        nombreArchivo3 = new javax.swing.JTextField();
        verMapa3 = new javax.swing.JButton();
        verDatos3 = new javax.swing.JButton();

        ventanaDatos.setMinimumSize(new java.awt.Dimension(400, 400));

        seleccionar.setText("Seleccionar");
        seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarActionPerformed(evt);
            }
        });

        labelFecha.setText("Fecha (MM-AAAA):");

        tablaDatos.setColumns(20);
        tablaDatos.setRows(5);
        jScrollPane1.setViewportView(tablaDatos);

        exportarLabel.setText("Exportar:");

        botonCSV.setText("CSV");
        botonCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCSVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ventanaDatosLayout = new javax.swing.GroupLayout(ventanaDatos.getContentPane());
        ventanaDatos.getContentPane().setLayout(ventanaDatosLayout);
        ventanaDatosLayout.setHorizontalGroup(
            ventanaDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ventanaDatosLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(ventanaDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ventanaDatosLayout.createSequentialGroup()
                        .addGroup(ventanaDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ventanaDatosLayout.createSequentialGroup()
                                .addComponent(labelFecha)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(seleccionar)))
                        .addContainerGap(15, Short.MAX_VALUE))
                    .addGroup(ventanaDatosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(exportarLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))))
        );
        ventanaDatosLayout.setVerticalGroup(
            ventanaDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ventanaDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ventanaDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seleccionar)
                    .addComponent(labelFecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ventanaDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonCSV)
                    .addComponent(exportarLabel))
                .addContainerGap())
        );

        ventanaIndice.setMaximizedBounds(new java.awt.Rectangle(400, 400, 400, 400));
        ventanaIndice.setMinimumSize(new java.awt.Dimension(400, 400));

        exportarLabel1.setText("Exportar:");

        botonCSVIH.setText("CSV");
        botonCSVIH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCSVIHActionPerformed(evt);
            }
        });

        seleccionarIH.setText("Seleccionar");
        seleccionarIH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarIHActionPerformed(evt);
            }
        });

        labelFecha1.setText("Fecha (MM-AAAA):");

        tablaDatosIH.setColumns(20);
        tablaDatosIH.setRows(5);
        jScrollPane2.setViewportView(tablaDatosIH);

        botonNC.setText("NC");
        botonNC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ventanaIndiceLayout = new javax.swing.GroupLayout(ventanaIndice.getContentPane());
        ventanaIndice.getContentPane().setLayout(ventanaIndiceLayout);
        ventanaIndiceLayout.setHorizontalGroup(
            ventanaIndiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ventanaIndiceLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(ventanaIndiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ventanaIndiceLayout.createSequentialGroup()
                        .addGroup(ventanaIndiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ventanaIndiceLayout.createSequentialGroup()
                                .addComponent(labelFecha1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textFechaIH, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(seleccionarIH)))
                        .addContainerGap(18, Short.MAX_VALUE))
                    .addGroup(ventanaIndiceLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(exportarLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonCSVIH, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonNC, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );
        ventanaIndiceLayout.setVerticalGroup(
            ventanaIndiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ventanaIndiceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ventanaIndiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFechaIH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seleccionarIH)
                    .addComponent(labelFecha1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ventanaIndiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonCSVIH)
                    .addComponent(exportarLabel1)
                    .addComponent(botonNC))
                .addContainerGap())
        );

        ventanaMapa.setMinimumSize(new java.awt.Dimension(250, 890));

        exportarmapa.setText("PNG");
        exportarmapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportarmapaActionPerformed(evt);
            }
        });

        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel1.setMinimumSize(new java.awt.Dimension(220, 800));

        jLabel2.setText("Exportar:");

        javax.swing.GroupLayout ventanaMapaLayout = new javax.swing.GroupLayout(ventanaMapa.getContentPane());
        ventanaMapa.getContentPane().setLayout(ventanaMapaLayout);
        ventanaMapaLayout.setHorizontalGroup(
            ventanaMapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ventanaMapaLayout.createSequentialGroup()
                .addGroup(ventanaMapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ventanaMapaLayout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exportarmapa))
                    .addGroup(ventanaMapaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        ventanaMapaLayout.setVerticalGroup(
            ventanaMapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ventanaMapaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ventanaMapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exportarmapa)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        abrir.setText("Abrir");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });

        indiceHidrico.setText("Índice Hídrico");
        indiceHidrico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indiceHidricoActionPerformed(evt);
            }
        });

        verMapa1.setText("Visualizar Mapa");
        verMapa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verMapa1ActionPerformed(evt);
            }
        });

        verDatos1.setText("Visualizar Datos");
        verDatos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verDatos1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelArchivo1Layout = new javax.swing.GroupLayout(panelArchivo1);
        panelArchivo1.setLayout(panelArchivo1Layout);
        panelArchivo1Layout.setHorizontalGroup(
            panelArchivo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelArchivo1Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(nombreArchivo1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(verMapa1)
                .addGap(18, 18, 18)
                .addComponent(verDatos1)
                .addGap(23, 23, 23))
        );
        panelArchivo1Layout.setVerticalGroup(
            panelArchivo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelArchivo1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelArchivo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreArchivo1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verMapa1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verDatos1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        verMapa2.setText("Visualizar Mapa");
        verMapa2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verMapa2ActionPerformed(evt);
            }
        });

        verDatos2.setText("Visualizar Datos");
        verDatos2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verDatos2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelArchivo2Layout = new javax.swing.GroupLayout(panelArchivo2);
        panelArchivo2.setLayout(panelArchivo2Layout);
        panelArchivo2Layout.setHorizontalGroup(
            panelArchivo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelArchivo2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nombreArchivo2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(verMapa2)
                .addGap(18, 18, 18)
                .addComponent(verDatos2)
                .addGap(25, 25, 25))
        );
        panelArchivo2Layout.setVerticalGroup(
            panelArchivo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelArchivo2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelArchivo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreArchivo2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verMapa2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verDatos2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        verMapa3.setText("Visualizar Mapa");
        verMapa3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verMapa3ActionPerformed(evt);
            }
        });

        verDatos3.setText("Visualizar Datos");
        verDatos3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verDatos3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelArchivo3Layout = new javax.swing.GroupLayout(panelArchivo3);
        panelArchivo3.setLayout(panelArchivo3Layout);
        panelArchivo3Layout.setHorizontalGroup(
            panelArchivo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelArchivo3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(nombreArchivo3, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(verMapa3)
                .addGap(18, 18, 18)
                .addComponent(verDatos3)
                .addGap(25, 25, 25))
        );
        panelArchivo3Layout.setVerticalGroup(
            panelArchivo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelArchivo3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelArchivo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreArchivo3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verMapa3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verDatos3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(indiceHidrico, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelArchivo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(panelArchivo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelArchivo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(indiceHidrico, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(panelArchivo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelArchivo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelArchivo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void cerrar(){ //Funcionalidad en caso de que el usuario quiera cerrar la ventana principal (Solo funciona dentro de los JFrame)
        try{
            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {
                public void windowClosing(WindowEvent e){
                    salida(); //Ventana de confirmacion al momento de cerrar
                }
            });
            this.setVisible(true);
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    private void salida(){ //Mensaje de confirmacion
        int valor=JOptionPane.showConfirmDialog(this, "¿Estas seguro de cerrar?", "Advertencia", JOptionPane.YES_NO_OPTION);
        if(valor==JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }
    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        String[] fila;
        JFileChooser chooser = new JFileChooser();
        
        //Filtramos las extensiones
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivo netCDF (.nc)","nc");
        chooser.setFileFilter(filtro);
        
        //Abrimos el cuadro y guardamos la selección del usuario
        int seleccion = chooser.showOpenDialog(this);
        
        //si el usuario presiona aceptar
        if(seleccion == JFileChooser.APPROVE_OPTION){
            
            //seleccionamos el archivo
            File documento = chooser.getSelectedFile();
            
            switch(contadorArchivos){
                case 1: ruta1 = documento.getAbsolutePath();
                        fila = ruta1.split("CR2MET_");
                        this.nombreArchivo1.setText("CR2MET_" + fila[fila.length-1]);
                        panelArchivo1.setVisible(true);
                        contadorArchivos++;
                        contadorIRH = 1;
                        break;

                case 2: ruta2 = documento.getAbsolutePath();
                        if(!ruta2.equals(ruta1)){
                            fila = ruta2.split("CR2MET_");
                            this.nombreArchivo2.setText("CR2MET_" + fila[fila.length-1]);        
                            panelArchivo2.setVisible(true);
                            contadorArchivos++;
                            contadorIRH = 2;
                        }else{
                            JOptionPane.showMessageDialog(null, "El archivo ya fue cargado", "", JOptionPane.ERROR_MESSAGE);    
                        }
                        break;
                        
                case 3: ruta3 = documento.getAbsolutePath();
                        if(!ruta3.equals(ruta1) && !ruta3.equals(ruta2)){
                            fila = ruta3.split("CR2MET_");
                            this.nombreArchivo3.setText("CR2MET_" + fila[fila.length-1]);
                            panelArchivo3.setVisible(true);
                            contadorIRH = 3;
                        }else{
                            JOptionPane.showMessageDialog(null, "El archivo ya fue cargado", "", JOptionPane.ERROR_MESSAGE);
                        }
                        break;
                        
                default: JOptionPane.showMessageDialog(null, "No puedes cargar más archivos", "Error", JOptionPane.WARNING_MESSAGE);        
                         break;
            }
        }

        
    }//GEN-LAST:event_abrirActionPerformed
        
        
    private void verDatos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verDatos1ActionPerformed
       ventanaDatos.setVisible(true);
       opcion = 1;
    }//GEN-LAST:event_verDatos1ActionPerformed

    private void verDatos2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verDatos2ActionPerformed
        ventanaDatos.setVisible(true);
        opcion = 2;
    }//GEN-LAST:event_verDatos2ActionPerformed

    private void verDatos3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verDatos3ActionPerformed
        ventanaDatos.setVisible(true);
        opcion = 3;
    }//GEN-LAST:event_verDatos3ActionPerformed

    private void seleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarActionPerformed
        try {
            fecha = textFecha.getText();
            switch(opcion){
                
                case 1: Procesador_Archivos_NC procesadorSelec1 = new Procesador_Archivos_NC(ruta1,fecha);
                        datos = procesadorSelec1.acceder_variables();
                        String data1 = null;
                        for(int i = 0; i < datos.length; i++){
                            if(i != 0){
                                data1 += datos[i] + "\n";
                            }else{
                                data1 = datos[i] + "\n";
                            }
                        }
                        tablaDatos.setText(data1);
                        break;
                        
                case 2: Procesador_Archivos_NC procesadorSelec2 = new Procesador_Archivos_NC(ruta2,fecha);
                        datos = procesadorSelec2.acceder_variables();
                        String data2 = null;
                        for(int i = 0; i < datos.length; i++){
                             if(i != 0){
                                data2 += datos[i] + "\n";
                            }else{
                                data2 = datos[i] + "\n";
                            }
                        }
                        tablaDatos.setText(data2);
                        break;
                        
                case 3: Procesador_Archivos_NC procesadorSelec3 = new Procesador_Archivos_NC(ruta3,fecha);
                        datos = procesadorSelec3.acceder_variables();
                        String data3 = null;
                        for(int i = 0; i < datos.length; i++){
                             if(i != 0){
                                data3 += datos[i] + "\n";
                            }else{
                                data3 = datos[i] + "\n";
                            }
                        }
                        tablaDatos.setText(data3);
                        break;
                        
                default: JOptionPane.showMessageDialog(null, "No se pudo completar tu solicitud", "Error", JOptionPane.WARNING_MESSAGE);        
                         break;   
            }
            
            
        } catch (InvalidRangeException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_seleccionarActionPerformed

    private void botonCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCSVActionPerformed
        try {
            fecha = textFecha.getText();
            String temp;
            String nombreCSV;
            
            
            switch(opcion){
                
                case 1: temp = nombreArchivo1.getText();
                        nombreCSV = temp + ".csv";
                        Procesador_Archivos_NC procesadorCSV1 = new Procesador_Archivos_NC(ruta1,fecha);
                        procesadorCSV1.exportarCSV(nombreCSV);
                        break;
                        
                case 2: temp = nombreArchivo2.getText();
                        nombreCSV = temp + ".csv";
                        Procesador_Archivos_NC procesadorCSV2 = new Procesador_Archivos_NC(ruta2,fecha);
                        procesadorCSV2.exportarCSV(nombreCSV);                        
                        break;
                        
                case 3: temp = nombreArchivo3.getText();
                        nombreCSV = temp + ".csv";
                        Procesador_Archivos_NC procesadorCSV3 = new Procesador_Archivos_NC(ruta3,fecha);
                        procesadorCSV3.exportarCSV(nombreCSV);
                        break;
                        
                default: JOptionPane.showMessageDialog(null, "No se pudo generar el documento", "Error", JOptionPane.WARNING_MESSAGE);        
                         break;
            }
        } catch (InvalidRangeException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonCSVActionPerformed

    private void botonCSVIHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCSVIHActionPerformed
        try {
            Funciones indiceCSV = new Funciones(ruta1, ruta2, ruta3, fecha);
            indiceCSV.exportarCSV();
            
        } catch (InvalidRangeException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonCSVIHActionPerformed

    private void seleccionarIHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarIHActionPerformed
         try {
            fecha = textFechaIH.getText();            
            
            Funciones indice = new Funciones(ruta1, ruta2, ruta3, fecha);
            resultados = indice.retornarIndice();
            
            String data = null;
                for(int i = 0; i < resultados.length; i++){
                    if(i != 0){
                    data += resultados[i] + "\n";
                    }else{
                        data = resultados[i] + "\n";
                    }
                }
            tablaDatosIH.setText(data);
            
        } catch (InvalidRangeException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_seleccionarIHActionPerformed

    private void botonNCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNCActionPerformed
        try {
            EscritorNC escritor = new EscritorNC(resultados);

        } catch (InvalidRangeException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonNCActionPerformed

    private void indiceHidricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indiceHidricoActionPerformed
        if(contadorIRH == 3){
            ventanaIndice.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(null, "Faltan archivos por cargar", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_indiceHidricoActionPerformed

    private void verMapa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verMapa1ActionPerformed
        jLabel1.removeAll(); //Por cada vez que el usuario presione un boton diferente, esta funcion se asegurara que el JLabel este vacia, para recibir nuevas imagenes
        opcion=1;
        llamada.recibir(ruta1,opcion); //Funcion para llamar al generador de imagen, se envia la ruta del archivo junto a su direccion para diferenciarlo del resto de botones
        nombre="mapa1.png"; //Asignamos la ruta de la imagen, que por defecto se encontrara dentro de la carpeta del proyecto
        lugar= new File(nombre);
        if(lugar.exists()){ //Verificador, es para saber en caso de que la imagen se encuentra dentro de la carpeta
                etiqueta=new JLabel(new ImageIcon (nombre));
                etiqueta.setBounds(0, 0, 220, 800); //Posicion X,Y dentro del jLabel, mas el ancho x alto
                jLabel1.add(etiqueta);// Se añade la imagen dentro del JLabel
                ventanaMapa.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(null, "No se encontró la ruta de la imagen - Boton 1", "Error", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_verMapa1ActionPerformed

    private void verMapa2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verMapa2ActionPerformed
        jLabel1.removeAll();
        opcion=2;
        llamada.recibir(ruta2,opcion);
        nombre="mapa2.png";
        lugar= new File(nombre);
        if(lugar.exists()){
            etiqueta=new JLabel(new ImageIcon (nombre));
            etiqueta.setBounds(0, 0, 220, 800);
            jLabel1.add(etiqueta);
            ventanaMapa.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(null, "No se encontró la ruta de la imagen - Boton 2", "Error", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_verMapa2ActionPerformed

    private void verMapa3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verMapa3ActionPerformed
        jLabel1.removeAll();
        opcion=3;
        llamada.recibir(ruta3,opcion);
        nombre="mapa3.png";
        lugar= new File(nombre);
        if(lugar.exists()){
            etiqueta=new JLabel(new ImageIcon (nombre));
            etiqueta.setBounds(0, 0, 220, 800);
            jLabel1.add(etiqueta);
            ventanaMapa.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(null, "No se encontró la ruta de la imagen - Boton 3", "Error", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_verMapa3ActionPerformed

    private void exportarmapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportarmapaActionPerformed
        // TODO add your handling code here:
        String tipomapa = null;//Ruta de la imagen
        switch(opcion){
            case 1: tipomapa="mapa1.png";
                    llamada.Guardarimagen(tipomapa);
                    break;
            case 2: tipomapa="mapa2.png";
                    llamada.Guardarimagen(tipomapa);
                    break;
            case 3: tipomapa="mapa3.png";
                    llamada.Guardarimagen(tipomapa);
                    break;
            default:JOptionPane.showMessageDialog(null, "Error en opción", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_exportarmapaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abrir;
    private javax.swing.JButton botonCSV;
    private javax.swing.JButton botonCSVIH;
    private javax.swing.JButton botonNC;
    private javax.swing.JLabel exportarLabel;
    private javax.swing.JLabel exportarLabel1;
    private javax.swing.JButton exportarmapa;
    private javax.swing.JButton indiceHidrico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelFecha;
    private javax.swing.JLabel labelFecha1;
    private javax.swing.JTextField nombreArchivo1;
    private javax.swing.JTextField nombreArchivo2;
    private javax.swing.JTextField nombreArchivo3;
    private javax.swing.JPanel panelArchivo1;
    private javax.swing.JPanel panelArchivo2;
    private javax.swing.JPanel panelArchivo3;
    private javax.swing.JButton seleccionar;
    private javax.swing.JButton seleccionarIH;
    private javax.swing.JTextArea tablaDatos;
    private javax.swing.JTextArea tablaDatosIH;
    private javax.swing.JTextField textFecha;
    private javax.swing.JTextField textFechaIH;
    private javax.swing.JFrame ventanaDatos;
    private javax.swing.JFrame ventanaIndice;
    private javax.swing.JFrame ventanaMapa;
    private javax.swing.JButton verDatos1;
    private javax.swing.JButton verDatos2;
    private javax.swing.JButton verDatos3;
    private javax.swing.JButton verMapa1;
    private javax.swing.JButton verMapa2;
    private javax.swing.JButton verMapa3;
    // End of variables declaration//GEN-END:variables
}
